name: 'Release'

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'website/**'
      - '.github/workflows/deploy-website.yml'
      - 'docs/**'
      - '**.md'

permissions:
  contents: write

jobs:
  release:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Install Node.js & Bun & Configure Git
        uses: ./.github/actions/setup

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Bump version and prepare variables
        id: bump_version
        run: |
          git pull
          # VERSION_WITH_V будет, например, 'v0.1.25'
          VERSION_WITH_V=$(npm version patch -m "chore: bumped version to %s [skip ci]")
          # VERSION_CLEAN будет '0.1.25'
          VERSION_CLEAN=${VERSION_WITH_V#v}
          echo "tag_name=${VERSION_WITH_V}" >> $GITHUB_OUTPUT
          echo "clean_version=${VERSION_CLEAN}" >> $GITHUB_OUTPUT

      - name: Push changes and tags
        run: git push --follow-tags

      - name: Build and Create Release
        uses: tauri-apps/tauri-action@v0
        env:
          # РЕШЕНИЕ №1: Правильный токен для создания подписи
          GITHUB_TOKEN: ${{ secrets.PAT }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ steps.bump_version.outputs.tag_name }}
          # Имя релиза, которое нравится tauri-action@v0 для генерации подписи
          releaseName: '${{ steps.bump_version.outputs.tag_name }}'

          # РЕШЕНИЕ №2: Передача чистой версии для записи в latest.json
          appVersion: ${{ steps.bump_version.outputs.clean_version }}

          releaseBody: 'Automated release of new version.'
          releaseDraft: false
          prerelease: false
